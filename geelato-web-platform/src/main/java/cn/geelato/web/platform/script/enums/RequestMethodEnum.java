package cn.geelato.web.platform.script.enums;

/**
 * @author diabl
 */
public enum RequestMethodEnum {
    GET,// 请求指定的页面信息，并返回实体主体。GET是最常用的HTTP请求方法之一，它通常用于请求服务器发送某个资源（如HTML页面、图片等）。GET请求的数据会附加在URL之后（即“查询字符串”），并且这个操作应该是安全的和幂等的。
    POST,// 向指定资源提交数据进行处理（如提交表单或上传文件）。POST请求的数据包含在请求体中，这种方式允许发送大量数据，并且不会显示在URL中。POST请求通常不是幂等的，即多次执行相同的POST请求可能会产生不同的结果（如数据被多次提交）。
    PUT,// 向指定资源位置上传其最新内容（即更新资源）。PUT请求是幂等的，即多次对同一资源的PUT请求应该产生相同的结果。如果指定的资源不存在，则可能根据服务器的配置创建该资源。
    DELETE,// 请求服务器删除指定的资源。DELETE请求也是幂等的，即多次执行相同的DELETE请求应该产生相同的结果（即资源被删除）。
    OPTIONS,// 允许客户端查看服务器的性能。它可以用于确定服务器支持哪些HTTP方法，或者对于特定的URL，哪些选项是可用的。这可以用于CORS（跨源资源共享）预检请求。
    HEAD,// 类似于GET请求，但服务器在响应中只返回首部，不返回实体的主体部分。这可以用于获取资源的元信息（如内容类型或修改日期）而不传输资源本身。
    PATCH,// 用于对资源进行部分修改。与PUT请求不同，PATCH请求只更新资源的部分内容，而不是整个资源。这使得PATCH成为一种比PUT更高效的更新方法，特别是对于大型资源。
    TRACE,// 回显服务器收到的请求，主要用于测试或诊断。然而，由于它可能暴露敏感信息，大多数现代Web服务器都不支持或禁用TRACE方法。
    CONNECT,// HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的隧道。

    COPY,// 在WebDAV中，COPY方法用于将资源（如文件或目录）从一个位置复制到同一服务器上的另一个位置，或者可能跨域复制到另一个支持WebDAV的服务器上。它允许用户或应用程序在服务器上创建资源的副本。
    LINK,// 虽然HTTP/1.1标准中没有直接定义LINK方法，但在WebDAV或类似协议中，它可能被用来创建两个资源之间的链接。这种链接可以是物理的（如文件系统中的快捷方式）或逻辑的（如语义网中的关系）。不过，请注意，WebDAV扩展通常使用PROPPATCH或PROPFIND方法来处理资源属性，而不是直接使用LINK方法。
    UNLINK,// 与LINK方法相对应，UNLINK（如果它存在于某个协议中）可能会用于删除两个资源之间的链接。然而，在WebDAV中，通常使用DELETE方法来删除资源，而不是专门用于断开链接的方法。对于属性或关系的管理，WebDAV更倾向于使用PROPFIND和PROPPATCH方法。
    PURGE,// PURGE不是HTTP/1.1标准方法，但它在HTTP缓存控制中使用，尤其是在与HTTP/2的服务器推送功能相关的缓存验证场景中。然而，在WebDAV或类似上下文中，PURGE可能用于请求服务器删除或清除某些缓存的数据或资源，尽管这不是WebDAV标准的一部分。
    LOCK, UNLOCK,// 在WebDAV中，LOCK方法用于在客户端和服务器之间建立对资源的锁定，以防止其他客户端同时修改该资源。这有助于管理对共享资源的并发访问。UNLOCK方法则用于解除对资源的锁定，允许其他客户端修改该资源。
    MKCOL,// MKCOL（Make Collection）是WebDAV特有的方法，用于在服务器上创建新的集合（在WebDAV中，集合类似于文件系统中的目录）。它允许客户端在服务器上组织和管理资源。
    MOVE,// MOVE方法在WebDAV中用于将资源从一个位置移动到另一个位置。这包括在同一服务器上的移动，以及可能跨域移动到另一个支持WebDAV的服务器。MOVE操作可能涉及资源URL的更改。
    PROPFIND,// PROPFIND是WebDAV用于检索资源属性的方法。客户端可以请求关于资源的一个或多个属性的信息，或者请求服务器上所有资源的属性信息。这对于管理资源元数据非常有用。
    REPORT,// REPORT是WebDAV中用于执行自定义请求的方法。它允许客户端向服务器发送请求，并期望服务器以某种方式处理这些请求并返回结果。REPORT方法提供了一种灵活的机制，允许实现特定于应用程序的功能。
    VIEW,// VIEW不是HTTP/1.1或WebDAV标准方法。它可能是某个特定应用程序或框架中定义的自定义方法，用于请求以特定方式查看或呈现资源。在标准的WebDAV或HTTP上下文中，您可能需要查看该应用程序的文档来了解VIEW方法的具体用途。
}